{
  "info": {
    "_postman_id": "c0415e6d-8892-49f7-a577-3899a5e29018",
    "name": "auth-service",
    "description": "## ðŸ“„ Auth-Service API Documentation\n\nThis documentation provides the details and steps required to start using the **Auth-Service API**, which offers essential authentication features, such as user registration, login, and JWT token-based authentication for secure access to your application.\n\n### ðŸ”– How to use this template\n\nReplace placeholder text in brackets `(( ))` with the specific information of your service. Tips and examples are included below to help guide you.\n\n## Overview\n\nThe **Auth-Service API** provides key authentication features for managing users, securing access to resources, and maintaining session tokens. It helps developers integrate user authentication functionality into their applications with ease. The API supports registration, login, and token-based authentication via JSON Web Tokens (JWT).\n\n## Getting started guide\n\nTo start using the **Auth-Service API**, follow the steps below:\n\n1. **Obtain an API Key**: To interact with the Auth-Service API, you need an API key. You can get your API key from the admin panel in your application.\n    \n2. **Secure Communication**: Ensure that all your API requests are made over HTTPS. The API does not accept unsecured HTTP requests and will return a redirect (HTTP 301) to the corresponding HTTPS endpoint.\n    \n3. **JSON Format**: All responses from the API are in JSON format. Errors will also be returned in JSON with an `error` key.\n    \n4. **Rate Limits**: The API has rate limits to prevent abuse. You are allowed up to 500 requests per minute. If you exceed this limit, you will receive an HTTP 429 error.\n    \n\n## Authentication\n\nThe **Auth-Service API** uses **JWT (JSON Web Token)** for authentication. All requests to protected endpoints must include a valid JWT token in the request headers.\n\n- **Generate JWT**: Upon successful login, the API returns a JWT token. This token must be included in the `Authorization` header for all subsequent API requests.\n    \n- textCopy codeAuthorization: Bearer\n    \n- **Token Expiration**: Tokens are valid for 24 hours. After that, users need to re-authenticate to obtain a new token.\n    \n\n### Authentication Error Responses\n\n- jsonCopy code{ \"message\": \"Unauthorized\"}\n    \n    Example error response:\n    \n\n## Endpoints\n\nBelow is a list of the available endpoints for the **Auth-Service API**:\n\n### **Register User**\n\n- **Endpoint**: `/auth-service/auth/register`\n    \n- **Method**: POST\n    \n- **Description**: Registers a new user by providing a username, email, and password.\n    \n- jsonCopy code{ \"username\": \"exampleuser\", \"password\": \"password123\", \"emailId\": \"user@example.com\"}\n    \n- jsonCopy code{ \"message\": \"User registered successfully\"}\n    \n\n### **Login User**\n\n- **Endpoint**: `/auth-service/auth/login`\n    \n- **Method**: POST\n    \n- **Description**: Logs in a user and returns a JWT token.\n    \n- jsonCopy code{ \"username\": \"exampleuser\", \"password\": \"password123\"}\n    \n- jsonCopy code{ \"token\": \"\", \"user\": { \"id\": \"123\", \"username\": \"exampleuser\", \"email\": \"user@example.com\" }}\n    \n\n### **Get User Info (Protected)**\n\n- **Endpoint**: `/auth-service/user/getUserById`\n    \n- **Method**: GET\n    \n- **Description**: Retrieves the authenticated user's details.\n    \n- textCopy codeAuthorization: Bearer\n    \n- jsonCopy code{ \"id\": \"123\", \"username\": \"exampleuser\", \"email\": \"user@example.com\"}",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "19058253",
    "_collection_link": "https://winter-moon-92581.postman.co/workspace/6c6b580d-8a51-41f8-821a-d4723509b0a3/collection/19058253-c0415e6d-8892-49f7-a577-3899a5e29018?action=share&source=collection_link&creator=19058253"
  },
  "item": [
    {
      "name": "User",
      "item": [
        {
          "name": "Get authenticated user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "authorization",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NzA2NWUyYTQ1OTZjZTdkNGNjNDMyZjMiLCJ1c2VyTmFtZSI6InNhbmplZXZrdW1hciIsImVtYWlsSWQiOiJzYW5qdUBnbWFpbC5jb20iLCJpYXQiOjE3Mjg0NzMzMzYsImV4cCI6MTcyODU1OTczNn0.g63b6RjbX7hOV36LfaFQvWLOoQ2SjrttH_bF96xc5AA",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{auth-server}}/user/getUserById",
              "host": ["{{auth-server}}"],
              "path": ["user", "getUserById"]
            },
            "description": "Gets information about the authenticated user."
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.getpostman.com/me",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"user\": {\n        \"id\": 12345678,\n        \"username\": \"taylor-lee\",\n        \"email\": \"taylor.lee@example.com\",\n        \"fullName\": \"Taylor Lee\",\n        \"avatar\": \"https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg\",\n        \"isPublic\": true\n    },\n    \"operations\": [\n        {\n            \"name\": \"mock_usage\",\n            \"limit\": 1000000,\n            \"usage\": 110276,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"monitor_request_runs\",\n            \"limit\": 10000000,\n            \"usage\": 1141750,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"api_usage\",\n            \"limit\": 1000000,\n            \"usage\": 16240,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"custom_domains\",\n            \"limit\": 25,\n            \"usage\": 25,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"serverless_requests\",\n            \"limit\": 10000,\n            \"usage\": 0,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"integrations\",\n            \"limit\": 5000,\n            \"usage\": 1018,\n            \"overage\": 0\n        },\n        {\n            \"name\": \"cloud_agent_requests\",\n            \"limit\": 1000000,\n            \"usage\": 1615,\n            \"overage\": 0\n        }\n    ]\n}"
            },
            {
              "name": "Rate Limit Exceeded",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.getpostman.com/me",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["me"]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
            }
          ]
        }
      ],
      "description": "The `/me` endpoints let you manage information about the authenticated user."
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\":\"sanjeevkumar\",\n  \"password\":\"sanjeev@123\",\n  \"emailId\":\"sanju@gmail.com\"\n}"
            },
            "url": {
              "raw": "{{auth-server}}/auth/register",
              "host": ["{{auth-server}}"],
              "path": ["auth", "register"],
              "query": [
                {
                  "key": "workspace",
                  "value": "{{workspaceId}}",
                  "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                  "disabled": true
                }
              ]
            },
            "description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` â€” An **object** that contains the following properties:\n    *   `name` â€” A **string** value that contains the collection's name.\n    *   `schema` â€” A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` â€” An **object** that contains the HTTP request and response information.\n    *   `request` â€” An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object â€” Use the `definitions.info` entry.\n    *   `item` object â€” Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
            },
            {
              "name": "Malformed Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "name": "Content-Type",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"
            },
            {
              "name": "Rate Limit Exceeded",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": ""
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
            }
          ]
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"username\":\"sanjeevkumar\",\n  \"password\":\"sanjeev@123\"\n}"
            },
            "url": {
              "raw": "{{auth-server}}/auth/login",
              "host": ["{{auth-server}}"],
              "path": ["auth", "login"],
              "query": [
                {
                  "key": "workspace",
                  "value": "{{workspaceId}}",
                  "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                  "disabled": true
                }
              ]
            },
            "description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` â€” An **object** that contains the following properties:\n    *   `name` â€” A **string** value that contains the collection's name.\n    *   `schema` â€” A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` â€” An **object** that contains the HTTP request and response information.\n    *   `request` â€” An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object â€” Use the `definitions.info` entry.\n    *   `item` object â€” Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
          },
          "response": [
            {
              "name": "Successful Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
            },
            {
              "name": "Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
            },
            {
              "name": "Malformed Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "name": "Content-Type",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"
            },
            {
              "name": "Rate Limit Exceeded",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://api.getpostman.com/collections",
                  "protocol": "https",
                  "host": ["api", "getpostman", "com"],
                  "path": ["collections"],
                  "query": [
                    {
                      "key": "workspace",
                      "value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
                      "description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
                      "disabled": true
                    }
                  ]
                }
              },
              "status": "Too Many Requests",
              "code": 429,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "description": ""
                }
              ],
              "cookie": [],
              "body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
            }
          ]
        }
      ],
      "description": "The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/)."
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "X-API-Key",
        "type": "string"
      },
      {
        "key": "value",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://farming-simulator.pstmn.io"
    }
  ]
}
